{"version":3,"file":"static/js/431.8b837612.chunk.js","mappings":"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","sources":["Pages/User/User/PopoverContent.js","Pages/User/UserBooks.js","utils/formatTime.js"],"sourcesContent":["import React from 'react';\nimport {\n  Avatar,\n  Box,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Grid,\n} from '@mui/material';\n\nconst PopoverContent = ({ user }) => {\n  const {\n    name,\n    email,\n    phoneNumber,\n    dob,\n    age,\n    education,\n    address,\n    place,\n    contactDetails,\n    returnDate,\n  } = user;\n\n  return (\n    <Box p={2} minWidth={400}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Avatar alt={name} src={user.pic} />\n        </Grid>\n        <Grid item xs={12} sm container direction=\"column\">\n          <Grid item xs>\n            <Typography variant=\"subtitle1\">{name}</Typography>\n            <Typography variant=\"body2\">{email}</Typography>\n            <Typography variant=\"body2\">{phoneNumber}</Typography>\n          </Grid>\n\n          <Grid item xs>\n            <Typography variant=\"subtitle2\">Personal Details</Typography>\n            <Divider />\n\n            <List dense>\n              <ListItem>\n                <ListItemText primary=\"Name\" secondary={name} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Phone\" secondary={phoneNumber} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Date of Birth\" secondary={dob} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Age\" secondary={age} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Education\" secondary={education} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Address\" secondary={address} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Place\" secondary={place} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Contact Details\" secondary={contactDetails} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Return Date\" secondary={returnDate} />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default PopoverContent;\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, IconButton, Popover, Card } from \"@mui/material\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Helmet } from \"react-helmet-async\";\nimport Container from \"@mui/material/Container\";\nimport PopoverContent from \"./User/PopoverContent\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport API from \"../../utils/api\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { fDate } from \"../../utils/formatTime\";\n\nconst UserFetcher = () => {\n  const { GetDashboradData, adminHomeData } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [popoverContent, setPopoverContent] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await API.get(\"/books\");\n        const users = response.data.map((user) => ({ id: user._id, ...user }));\n        setUsers(users);\n        setLoading(false);\n      } catch (error) {\n        console.log(\"Error: \", error);\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleViewDetails = (user) => {\n    setPopoverContent(user);\n  };\n\n  const handleEditUser = (user) => {\n    // Handle edit action here\n    console.log(\"Edit user:\", user);\n  };\n\n  const handleDeleteUser = (user) => {\n    // Handle delete action here\n    console.log(\"Delete user:\", user);\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverContent(null);\n  };\n\n  const handleModalOpen = () => {\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  }; //lastSeen\n\nconst TABLE_HEAD = [\n\t{ id: \"image\", label: \"Image\", alignRight: false },\n\t{ id: \"title\", label: \"Title\", alignRight: false },\n\t{ id: \"author\", label: \"Author\", alignRight: false },\n\t{ id: \"publishedDate\", label: \"Published Date\", alignRight: false },\n\t{ id: \"genre\", label: \"Genre\", alignRight: false },\n\t{ id: \"actions\", label: \"Actions\", alignRight: false },\n];\nconst columns = [\n    {\n      field: \"image\",\n      headerName: \"Avatar\",\n      flex: 0.5,\n      renderCell: (params) => (\n        <Avatar src={params.row.pic} alt={params.row.name} />\n      ),\n    },\n    {\n      field: \"title\",\n      headerName: \"Title\",\n      flex: 1,\n    },\n    { field: \"author\", headerName: \"Author\", flex: 1 },\n    { field: \"genre\", headerName: \"Genre\", flex: 1 },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      flex: 1,\n    },\n    { field: \"publicationDate\", headerName: \"Published Date\", flex: 2, valueGetter: (params) => (fDate(params.row.publicationDate)), },\n    {\n      field: \"actions\",\n      headerName: \"Actions\",\n      flex: 1,\n      renderCell: (params) => (\n        <IconButton\n          onClick={() => handleViewDetails(params.row)}\n          color=\"primary\"\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>User | MI LIBRO</title>\n      </Helmet>\n\n      <Container>\n        <Card>\n          <DataGrid\n            rows={users}\n            columns={columns}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n          />\n        </Card>\n      </Container>\n\n      <Popover\n        open={popoverContent !== null}\n        anchorEl={popoverContent}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n      >\n        {popoverContent && <PopoverContent user={popoverContent} />}\n      </Popover>\n    </>\n  );\n};\n\nexport default UserFetcher;\n","import { format, getTime, formatDistanceToNow } from \"date-fns\";\n\nexport function fDate(date, newFormat) {\n\tconst fm = newFormat || \"dd MMM yyyy\";\n\n\treturn date ? format(new Date(date), fm) : \"\";\n}\n\nexport function fDateTime(date, newFormat) {\n\tconst fm = newFormat || \"dd MMM yyyy p\";\n\n\treturn date ? format(new Date(date), fm) : \"\";\n}\n\nexport function fTimestamp(date) {\n\treturn date ? getTime(new Date(date)) : \"\";\n}\n\nexport function fToNow(date) {\n\treturn date\n\t\t? formatDistanceToNow(new Date(date), {\n\t\t\t\taddSuffix: true,\n\t\t  })\n\t\t: \"\";\n}\n"],"names":["_ref","user","name","email","phoneNumber","dob","age","education","address","place","contactDetails","returnDate","_jsx","Box","p","minWidth","children","_jsxs","Grid","container","spacing","item","Avatar","alt","src","pic","xs","sm","direction","Typography","variant","Divider","List","dense","ListItem","ListItemText","primary","secondary","_useAuth","useAuth","_useState","GetDashboradData","adminHomeData","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","popoverContent","setPopoverContent","_useState5","_useState6","setLoading","_useState7","_useState8","useEffect","fetchUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_users","wrap","_context","prev","next","API","sent","data","map","_objectSpread","id","_id","t0","console","log","stop","apply","arguments","columns","field","headerName","flex","renderCell","params","row","valueGetter","fDate","publicationDate","IconButton","onClick","color","RemoveRedEyeIcon","_Fragment","Helmet","Container","Card","DataGrid","rows","components","Toolbar","GridToolbar","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PopoverContent","date","newFormat","fm","format","Date","fDateTime","fToNow","formatDistanceToNow","addSuffix"],"sourceRoot":""}