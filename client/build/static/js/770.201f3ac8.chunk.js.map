{"version":3,"file":"static/js/770.201f3ac8.chunk.js","mappings":"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","sources":["Pages/User/LikedBooks.js","Pages/User/User/PopoverContent.js","utils/formatTime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Avatar, IconButton, Popover, Card } from \"@mui/material\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport { Helmet } from \"react-helmet-async\";\nimport Container from \"@mui/material/Container\";\nimport PopoverContent from \"./User/PopoverContent\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport API from \"../../utils/api\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { fDate } from \"../../utils/formatTime\";\n\nconst UserFetcher = () => {\n  const { GetDashboradData, adminHomeData } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [popoverContent, setPopoverContent] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await API.get(\"/books\");\n        const users = response.data.map((user) => ({ id: user._id, ...user }));\n        setUsers(users);\n        setLoading(false);\n      } catch (error) {\n        console.log(\"Error: \", error);\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleViewDetails = (user) => {\n    setPopoverContent(user);\n  };\n\n  const handleEditUser = (user) => {\n    // Handle edit action here\n    console.log(\"Edit user:\", user);\n  };\n\n  const handleDeleteUser = (user) => {\n    // Handle delete action here\n    console.log(\"Delete user:\", user);\n  };\n\n  const handlePopoverClose = () => {\n    setPopoverContent(null);\n  };\n\n  const handleModalOpen = () => {\n    setOpenModal(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  }; //lastSeen\n\nconst TABLE_HEAD = [\n\t{ id: \"image\", label: \"Image\", alignRight: false },\n\t{ id: \"title\", label: \"Title\", alignRight: false },\n\t{ id: \"author\", label: \"Author\", alignRight: false },\n\t{ id: \"publishedDate\", label: \"Published Date\", alignRight: false },\n\t{ id: \"genre\", label: \"Genre\", alignRight: false },\n\t{ id: \"actions\", label: \"Actions\", alignRight: false },\n];\nconst columns = [\n    {\n      field: \"image\",\n      headerName: \"Avatar\",\n      flex: 0.5,\n      renderCell: (params) => (\n        <Avatar src={params.row.pic} alt={params.row.name} />\n      ),\n    },\n    {\n      field: \"title\",\n      headerName: \"Title\",\n      flex: 1,\n    },\n    { field: \"author\", headerName: \"Author\", flex: 1 },\n    { field: \"genre\", headerName: \"Genre\", flex: 1 },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      flex: 1,\n    },\n    { field: \"publicationDate\", headerName: \"Published Date\", flex: 2, valueGetter: (params) => (fDate(params.row.publicationDate)), },\n    {\n      field: \"actions\",\n      headerName: \"Actions\",\n      flex: 1,\n      renderCell: (params) => (\n        <IconButton\n          onClick={() => handleViewDetails(params.row)}\n          color=\"primary\"\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>User | MI LIBRO</title>\n      </Helmet>\n\n      <Container>\n        <Card>\n          <DataGrid\n            rows={users}\n            columns={columns}\n            components={{\n              Toolbar: GridToolbar,\n            }}\n          />\n        </Card>\n      </Container>\n\n      <Popover\n        open={popoverContent !== null}\n        anchorEl={popoverContent}\n        onClose={handlePopoverClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\",\n        }}\n      >\n        {popoverContent && <PopoverContent user={popoverContent} />}\n      </Popover>\n    </>\n  );\n};\n\nexport default UserFetcher;\n","import React from 'react';\nimport {\n  Avatar,\n  Box,\n  Typography,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Grid,\n} from '@mui/material';\n\nconst PopoverContent = ({ user }) => {\n  const {\n    name,\n    email,\n    phoneNumber,\n    dob,\n    age,\n    education,\n    address,\n    place,\n    contactDetails,\n    returnDate,\n  } = user;\n\n  return (\n    <Box p={2} minWidth={400}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Avatar alt={name} src={user.pic} />\n        </Grid>\n        <Grid item xs={12} sm container direction=\"column\">\n          <Grid item xs>\n            <Typography variant=\"subtitle1\">{name}</Typography>\n            <Typography variant=\"body2\">{email}</Typography>\n            <Typography variant=\"body2\">{phoneNumber}</Typography>\n          </Grid>\n\n          <Grid item xs>\n            <Typography variant=\"subtitle2\">Personal Details</Typography>\n            <Divider />\n\n            <List dense>\n              <ListItem>\n                <ListItemText primary=\"Name\" secondary={name} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Phone\" secondary={phoneNumber} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Date of Birth\" secondary={dob} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Age\" secondary={age} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Education\" secondary={education} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Address\" secondary={address} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Place\" secondary={place} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Contact Details\" secondary={contactDetails} />\n              </ListItem>\n              <ListItem>\n                <ListItemText primary=\"Return Date\" secondary={returnDate} />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default PopoverContent;\n","import { format, getTime, formatDistanceToNow } from \"date-fns\";\n\nexport function fDate(date, newFormat) {\n\tconst fm = newFormat || \"dd MMM yyyy\";\n\n\treturn date ? format(new Date(date), fm) : \"\";\n}\n\nexport function fDateTime(date, newFormat) {\n\tconst fm = newFormat || \"dd MMM yyyy p\";\n\n\treturn date ? format(new Date(date), fm) : \"\";\n}\n\nexport function fTimestamp(date) {\n\treturn date ? getTime(new Date(date)) : \"\";\n}\n\nexport function fToNow(date) {\n\treturn date\n\t\t? formatDistanceToNow(new Date(date), {\n\t\t\t\taddSuffix: true,\n\t\t  })\n\t\t: \"\";\n}\n"],"names":["_useAuth","useAuth","_useState","GetDashboradData","adminHomeData","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","popoverContent","setPopoverContent","_useState5","_useState6","setLoading","_useState7","_useState8","useEffect","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_users","wrap","_context","prev","next","API","sent","data","map","user","_objectSpread","id","_id","t0","console","log","stop","apply","arguments","columns","field","headerName","flex","renderCell","params","_jsx","Avatar","src","row","pic","alt","name","valueGetter","fDate","publicationDate","IconButton","onClick","color","children","RemoveRedEyeIcon","_jsxs","_Fragment","Helmet","Container","Card","DataGrid","rows","components","Toolbar","GridToolbar","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PopoverContent","email","phoneNumber","dob","age","education","address","place","contactDetails","returnDate","Box","p","minWidth","Grid","container","spacing","item","xs","sm","direction","Typography","variant","Divider","List","dense","ListItem","ListItemText","primary","secondary","date","newFormat","fm","format","Date","fDateTime","fToNow","formatDistanceToNow","addSuffix"],"sourceRoot":""}