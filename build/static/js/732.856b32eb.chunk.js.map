{"version":3,"file":"static/js/732.856b32eb.chunk.js","mappings":"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","sources":["Pages/Dashboard/Books/AddBookImage.js","Pages/Dashboard/Books/AddBookProfileDetails.js","Pages/Dashboard/AddBook.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, Typography, Button, Card, CardContent, Avatar, Divider, CardActions } from \"@mui/material\";\r\n\r\nexport default function AccountProfile({ setProfilePic, profilePic, newProfilePic, setNewProfilePic, isSaving, setIsSaving, setBook }) {\r\n  const handleProfilePicChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setNewProfilePic(file);\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      setProfilePic(reader.result);\r\n      setNewProfilePic(file);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setNewProfilePic(null);\r\n  };\r\n  const handleSave = () => {\r\n    if (newProfilePic) {\r\n      setIsSaving(true);\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        setTimeout(() => {\r\n          setIsSaving(false);\r\n          setProfilePic(reader.result);\r\n          setNewProfilePic(null);\r\n          setBook((prevBook) => ({\r\n            ...prevBook,\r\n            ['pic']: reader.result,\r\n          }));\r\n        }, 1000);\r\n      };\r\n\r\n      reader.readAsDataURL(newProfilePic);\r\n    }\r\n  };\r\n  const handleSaveProfilePic = () => {\r\n    setIsSaving(true);\r\n\r\n    // Simulating saving time\r\n    setTimeout(() => {\r\n      setProfilePic(newProfilePic);\r\n      setNewProfilePic(null);\r\n      setIsSaving(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Card>\r\n        <CardContent>\r\n          <Box\r\n            sx={{\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <Avatar\r\n              src={profilePic ? profilePic : \"https://www.pngitem.com/pimgs/m/146-1468479_my-profile-icon-blank-profile-picture-circle-hd.png\"}\r\n              sx={{\r\n                height: 80,\r\n                mb: 2,\r\n                width: 80,\r\n              }}\r\n            />\r\n           \r\n          </Box>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          {!newProfilePic && (\r\n            <Button\r\n              fullWidth\r\n              variant=\"text\"\r\n              component=\"label\"\r\n              disabled={isSaving}\r\n            >\r\n              {isSaving ? \"Saving...\" : \"Update Picture\"}\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                onChange={handleImageChange}\r\n              />\r\n            </Button>\r\n          )}\r\n          {newProfilePic && (\r\n            <>\r\n              <Button\r\n                fullWidth\r\n                variant=\"text\"\r\n                onClick={handleSave}\r\n                disabled={isSaving}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                fullWidth\r\n                variant=\"text\"\r\n                onClick={handleCancel}\r\n                disabled={isSaving}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          )}\r\n        </CardActions>\r\n      </Card></>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst BookDataInserter = ({\r\n  book,\r\n  setBook,\r\n  errors,\r\n  setErrors,\r\n  isFormValid,\r\n  setIsFormValid,\r\n}) => {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (validateForm) {\r\n      // Perform book insertion logic here\r\n      console.log(\"Book Data:\", book);\r\n\r\n      // Reset form after submission\r\n      setBook({\r\n        identifier: \"\",\r\n        title: \"\",\r\n        author: \"\",\r\n        publicationYear: \"\",\r\n        genre: \"\",\r\n        isbn: \"\",\r\n        rate: \"\",\r\n        editedRate: \"\",\r\n      });\r\n      setErrors({});\r\n      return true;\r\n    } else {\r\n      console.log(\"Form contains errors. Please fill in all fields.\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBook((prevBook) => ({\r\n      ...prevBook,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    var isValid = true;\r\n    const newErrors = {};\r\n\r\n    if (book.identifier.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.identifier = \"Identifier is required\";\r\n    }\r\n\r\n    if (book.title.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.title = \"Title is required\";\r\n    }\r\n\r\n    if (book.author.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.author = \"Author is required\";\r\n    }\r\n\r\n    if (book.publicationYear.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.publicationYear = \"Publication year is required\";\r\n    }\r\n\r\n    if (book.genre.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.genre = \"Genre is required\";\r\n    }\r\n\r\n    if (book.isbn.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.isbn = \"ISBN is required\";\r\n    }\r\n\r\n    if (book.rate.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.rate = \"Rate is required\";\r\n    }\r\n\r\n    if (book.editedRate.trim() === \"\") {\r\n      isValid = false;\r\n      newErrors.editedRate = \"Edited Rate is required\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    setIsFormValid(Object.keys(newErrors).length === 0);\r\n    return isValid;\r\n  };\r\n\r\n  const handleIsbnCheck = () => {\r\n    //if (book.isbn.trim() !== \"\") {\r\n    //  // Perform ISBN check logic here\r\n    //  console.log(\"Checking ISBN:\", book.isbn);\r\n    //}\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n      <Card>\r\n        <CardHeader\r\n          defaultExpanded\r\n          subheader=\"Enter book details\"\r\n          title=\"Book Data Inserter\"\r\n        />\r\n        <br />\r\n        <CardContent sx={{ pt: 0 }}>\r\n          <Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <Typography>Identifier</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"identifier\"\r\n                  value={book.identifier}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.identifier}\r\n                  helperText={errors.identifier}\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>Title</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"title\"\r\n                  value={book.title}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.title}\r\n                  helperText={errors.title}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>Author</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"author\"\r\n                  value={book.author}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.author}\r\n                  helperText={errors.author}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  {errors.publicationYear ? errors.publicationYear : \"Publication Year\"}\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"publicationYear\"\r\n                  value={book.publicationYear}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.publicationYear}\r\n                  helperText={errors.publicationYear}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>{errors.genre ? errors.genre : \"Genre\"}</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"genre\"\r\n                  value={book.genre}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.genre}\r\n                  helperText={errors.genre}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>{errors.isbn ? errors.isbn : \"ISBN\"}</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"isbn\"\r\n                  value={book.isbn}\r\n                  onChange={handleInputChange}\r\n                  onBlur={handleIsbnCheck}\r\n                  error={!!errors.isbn}\r\n                  helperText={errors.isbn}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>{errors.rate ? errors.rate : \"Rate\"}</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"rate\"\r\n                  value={book.rate}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.rate}\r\n                  helperText={errors.rate}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  {errors.editedRate ? errors.editedRate : \"Edited Rate\"}\r\n                </Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"editedRate\"\r\n                  value={book.editedRate}\r\n                  onChange={handleInputChange}\r\n                  error={!!errors.editedRate}\r\n                  helperText={errors.editedRate}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n          <Button variant=\"contained\" type=\"submit\" >\r\n            Save Book\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BookDataInserter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Grid, Container, Typography, Stack, Box, Skeleton } from \"@mui/material\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport AccountProfile from \"./Books/AddBookImage\";\r\nimport AccountProfileDetails from \"./Books/AddBookProfileDetails\";\r\n\r\nexport default function Account() {\r\n  const theme = useTheme();\r\n  const { isAuthenticated, IsPermit, user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [profilePic, setProfilePic] = useState();\r\n  const [newProfilePic, setNewProfilePic] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [book, setBook] = useState({\r\n    identifier: \"\",\r\n    pic: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    publicationYear: \"\",\r\n    genre: \"\",\r\n    isbn: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    IsPermit(true);\r\n\r\n    // Simulating loading time\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Account | MI LIBRO</title>\r\n      </Helmet>\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          py: 8,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Stack spacing={3}>\r\n            <div>\r\n              {isLoading ? (\r\n                <Skeleton variant=\"text\" width={200} height={40} />\r\n              ) : (\r\n                <Typography variant=\"h4\">Account</Typography>\r\n              )}\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Grid container spacing={5}>\r\n                <Grid item xs={12} md={6} lg={4}>\r\n                  {isLoading ? (\r\n                    <Skeleton variant=\"rectangular\" height={400} />\r\n                  ) : (\r\n                    <AccountProfile\r\n                      setProfilePic={setProfilePic}\r\n                      profilePic={profilePic}\r\n                      newProfilePic={newProfilePic}\r\n                      setNewProfilePic={setNewProfilePic}\r\n                      isSaving={isSaving}\r\n                      setIsSaving={setIsSaving}\r\n                      book={book}\r\n                      setBook={setBook}\r\n                      errors={errors}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} lg={8}>\r\n                  {isLoading ? (\r\n                    <Skeleton variant=\"rectangular\" height={400} />\r\n                  ) : (\r\n                    <AccountProfileDetails\r\n                        book={book}\r\n                        setBook={setBook}\r\n                        errors={errors}\r\n                        setErrors={setErrors}\r\n                        isFormValid={isFormValid}\r\n                        setIsFormValid={setIsFormValid}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Stack>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"names":["AccountProfile","_ref","setProfilePic","profilePic","newProfilePic","setNewProfilePic","isSaving","setIsSaving","setBook","_jsx","_Fragment","children","_jsxs","Card","CardContent","Box","sx","alignItems","display","flexDirection","Avatar","src","height","mb","width","Divider","CardActions","Button","fullWidth","variant","component","disabled","type","accept","style","onChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","onClick","setTimeout","prevBook","_objectSpread","_defineProperty","book","errors","setErrors","setIsFormValid","isFormValid","handleInputChange","_event$target","name","value","validateForm","isValid","newErrors","identifier","trim","title","author","publicationYear","genre","isbn","rate","editedRate","Object","keys","length","autoComplete","noValidate","onSubmit","preventDefault","console","log","CardHeader","defaultExpanded","subheader","pt","Grid","container","spacing","item","xs","Typography","TextField","error","helperText","autoFocus","onBlur","justifyContent","Account","useTheme","_useAuth","useAuth","isAuthenticated","IsPermit","_useState","user","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","pic","_useState10","_useState11","_useState12","_useState13","_useState14","useEffect","timer","clearTimeout","Helmet","flexGrow","py","Container","maxWidth","Stack","Skeleton","md","lg","AccountProfileDetails"],"sourceRoot":""}